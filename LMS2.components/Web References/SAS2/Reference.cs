//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace LMS2.components.SAS2 {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Service1Soap", Namespace="http://localhost/SAS2")]
    public partial class Service1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback InitializeWebPageOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryData_UUQPOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryStoredProc_ResultSet_UUQPOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryStoredProc_ResultSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback StoredProcForUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback StoredProcForUpdate2OperationCompleted;
        
        private System.Threading.SendOrPostCallback TranslatePageStringsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service1() {
            this.Url = global::LMS2.components.Properties.Settings.Default.LMS2_components_SAS2_Service1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event InitializeWebPageCompletedEventHandler InitializeWebPageCompleted;
        
        /// <remarks/>
        public event QueryData_UUQPCompletedEventHandler QueryData_UUQPCompleted;
        
        /// <remarks/>
        public event QueryStoredProc_ResultSet_UUQPCompletedEventHandler QueryStoredProc_ResultSet_UUQPCompleted;
        
        /// <remarks/>
        public event UpdateDataCompletedEventHandler UpdateDataCompleted;
        
        /// <remarks/>
        public event QueryStoredProc_ResultSetCompletedEventHandler QueryStoredProc_ResultSetCompleted;
        
        /// <remarks/>
        public event QueryDataCompletedEventHandler QueryDataCompleted;
        
        /// <remarks/>
        public event ExecuteQueryCompletedEventHandler ExecuteQueryCompleted;
        
        /// <remarks/>
        public event StoredProcForUpdateCompletedEventHandler StoredProcForUpdateCompleted;
        
        /// <remarks/>
        public event StoredProcForUpdate2CompletedEventHandler StoredProcForUpdate2Completed;
        
        /// <remarks/>
        public event TranslatePageStringsCompletedEventHandler TranslatePageStringsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/SAS2/InitializeWebPage", RequestNamespace="http://localhost/SAS2", ResponseNamespace="http://localhost/SAS2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet InitializeWebPage(string sPageID, string sDBName, string sUser) {
            object[] results = this.Invoke("InitializeWebPage", new object[] {
                        sPageID,
                        sDBName,
                        sUser});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void InitializeWebPageAsync(string sPageID, string sDBName, string sUser) {
            this.InitializeWebPageAsync(sPageID, sDBName, sUser, null);
        }
        
        /// <remarks/>
        public void InitializeWebPageAsync(string sPageID, string sDBName, string sUser, object userState) {
            if ((this.InitializeWebPageOperationCompleted == null)) {
                this.InitializeWebPageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitializeWebPageOperationCompleted);
            }
            this.InvokeAsync("InitializeWebPage", new object[] {
                        sPageID,
                        sDBName,
                        sUser}, this.InitializeWebPageOperationCompleted, userState);
        }
        
        private void OnInitializeWebPageOperationCompleted(object arg) {
            if ((this.InitializeWebPageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitializeWebPageCompleted(this, new InitializeWebPageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/SAS2/QueryData_UUQP", RequestNamespace="http://localhost/SAS2", ResponseNamespace="http://localhost/SAS2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryData_UUQP(string sReturnColumns, string sPageID, string sDBNameParm, string sDisplayView, int nOverrideQueryLimit, string sColumnShown, int nNumOfRows, string sFilter, string sSortString, string sAdvFilterFlag, bool updateUserPref, string sUser, ref string sErrMsg) {
            object[] results = this.Invoke("QueryData_UUQP", new object[] {
                        sReturnColumns,
                        sPageID,
                        sDBNameParm,
                        sDisplayView,
                        nOverrideQueryLimit,
                        sColumnShown,
                        nNumOfRows,
                        sFilter,
                        sSortString,
                        sAdvFilterFlag,
                        updateUserPref,
                        sUser,
                        sErrMsg});
            sErrMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryData_UUQPAsync(string sReturnColumns, string sPageID, string sDBNameParm, string sDisplayView, int nOverrideQueryLimit, string sColumnShown, int nNumOfRows, string sFilter, string sSortString, string sAdvFilterFlag, bool updateUserPref, string sUser, string sErrMsg) {
            this.QueryData_UUQPAsync(sReturnColumns, sPageID, sDBNameParm, sDisplayView, nOverrideQueryLimit, sColumnShown, nNumOfRows, sFilter, sSortString, sAdvFilterFlag, updateUserPref, sUser, sErrMsg, null);
        }
        
        /// <remarks/>
        public void QueryData_UUQPAsync(string sReturnColumns, string sPageID, string sDBNameParm, string sDisplayView, int nOverrideQueryLimit, string sColumnShown, int nNumOfRows, string sFilter, string sSortString, string sAdvFilterFlag, bool updateUserPref, string sUser, string sErrMsg, object userState) {
            if ((this.QueryData_UUQPOperationCompleted == null)) {
                this.QueryData_UUQPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryData_UUQPOperationCompleted);
            }
            this.InvokeAsync("QueryData_UUQP", new object[] {
                        sReturnColumns,
                        sPageID,
                        sDBNameParm,
                        sDisplayView,
                        nOverrideQueryLimit,
                        sColumnShown,
                        nNumOfRows,
                        sFilter,
                        sSortString,
                        sAdvFilterFlag,
                        updateUserPref,
                        sUser,
                        sErrMsg}, this.QueryData_UUQPOperationCompleted, userState);
        }
        
        private void OnQueryData_UUQPOperationCompleted(object arg) {
            if ((this.QueryData_UUQPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryData_UUQPCompleted(this, new QueryData_UUQPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/SAS2/QueryStoredProc_ResultSet_UUQP", RequestNamespace="http://localhost/SAS2", ResponseNamespace="http://localhost/SAS2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryStoredProc_ResultSet_UUQP(string sPageID, string sDBNameParm, string uspNameForSelect, int nOverrideQueryLimit, string sColumnShown, int nNumOfRows, string sFilter, string sAdvFilterFlag, bool updateUserPref, string sUser, ref string sErrMsg) {
            object[] results = this.Invoke("QueryStoredProc_ResultSet_UUQP", new object[] {
                        sPageID,
                        sDBNameParm,
                        uspNameForSelect,
                        nOverrideQueryLimit,
                        sColumnShown,
                        nNumOfRows,
                        sFilter,
                        sAdvFilterFlag,
                        updateUserPref,
                        sUser,
                        sErrMsg});
            sErrMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryStoredProc_ResultSet_UUQPAsync(string sPageID, string sDBNameParm, string uspNameForSelect, int nOverrideQueryLimit, string sColumnShown, int nNumOfRows, string sFilter, string sAdvFilterFlag, bool updateUserPref, string sUser, string sErrMsg) {
            this.QueryStoredProc_ResultSet_UUQPAsync(sPageID, sDBNameParm, uspNameForSelect, nOverrideQueryLimit, sColumnShown, nNumOfRows, sFilter, sAdvFilterFlag, updateUserPref, sUser, sErrMsg, null);
        }
        
        /// <remarks/>
        public void QueryStoredProc_ResultSet_UUQPAsync(string sPageID, string sDBNameParm, string uspNameForSelect, int nOverrideQueryLimit, string sColumnShown, int nNumOfRows, string sFilter, string sAdvFilterFlag, bool updateUserPref, string sUser, string sErrMsg, object userState) {
            if ((this.QueryStoredProc_ResultSet_UUQPOperationCompleted == null)) {
                this.QueryStoredProc_ResultSet_UUQPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryStoredProc_ResultSet_UUQPOperationCompleted);
            }
            this.InvokeAsync("QueryStoredProc_ResultSet_UUQP", new object[] {
                        sPageID,
                        sDBNameParm,
                        uspNameForSelect,
                        nOverrideQueryLimit,
                        sColumnShown,
                        nNumOfRows,
                        sFilter,
                        sAdvFilterFlag,
                        updateUserPref,
                        sUser,
                        sErrMsg}, this.QueryStoredProc_ResultSet_UUQPOperationCompleted, userState);
        }
        
        private void OnQueryStoredProc_ResultSet_UUQPOperationCompleted(object arg) {
            if ((this.QueryStoredProc_ResultSet_UUQPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryStoredProc_ResultSet_UUQPCompleted(this, new QueryStoredProc_ResultSet_UUQPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/SAS2/UpdateData", RequestNamespace="http://localhost/SAS2", ResponseNamespace="http://localhost/SAS2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateData(string VTable, string DBNameParm, System.Data.DataSet dstData) {
            object[] results = this.Invoke("UpdateData", new object[] {
                        VTable,
                        DBNameParm,
                        dstData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateDataAsync(string VTable, string DBNameParm, System.Data.DataSet dstData) {
            this.UpdateDataAsync(VTable, DBNameParm, dstData, null);
        }
        
        /// <remarks/>
        public void UpdateDataAsync(string VTable, string DBNameParm, System.Data.DataSet dstData, object userState) {
            if ((this.UpdateDataOperationCompleted == null)) {
                this.UpdateDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDataOperationCompleted);
            }
            this.InvokeAsync("UpdateData", new object[] {
                        VTable,
                        DBNameParm,
                        dstData}, this.UpdateDataOperationCompleted, userState);
        }
        
        private void OnUpdateDataOperationCompleted(object arg) {
            if ((this.UpdateDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDataCompleted(this, new UpdateDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/SAS2/QueryStoredProc_ResultSet", RequestNamespace="http://localhost/SAS2", ResponseNamespace="http://localhost/SAS2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryStoredProc_ResultSet(string usp, string[] ParmID, string[] ParmValue, string sDBNameParm, ref string sErrMsg) {
            object[] results = this.Invoke("QueryStoredProc_ResultSet", new object[] {
                        usp,
                        ParmID,
                        ParmValue,
                        sDBNameParm,
                        sErrMsg});
            sErrMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryStoredProc_ResultSetAsync(string usp, string[] ParmID, string[] ParmValue, string sDBNameParm, string sErrMsg) {
            this.QueryStoredProc_ResultSetAsync(usp, ParmID, ParmValue, sDBNameParm, sErrMsg, null);
        }
        
        /// <remarks/>
        public void QueryStoredProc_ResultSetAsync(string usp, string[] ParmID, string[] ParmValue, string sDBNameParm, string sErrMsg, object userState) {
            if ((this.QueryStoredProc_ResultSetOperationCompleted == null)) {
                this.QueryStoredProc_ResultSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryStoredProc_ResultSetOperationCompleted);
            }
            this.InvokeAsync("QueryStoredProc_ResultSet", new object[] {
                        usp,
                        ParmID,
                        ParmValue,
                        sDBNameParm,
                        sErrMsg}, this.QueryStoredProc_ResultSetOperationCompleted, userState);
        }
        
        private void OnQueryStoredProc_ResultSetOperationCompleted(object arg) {
            if ((this.QueryStoredProc_ResultSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryStoredProc_ResultSetCompleted(this, new QueryStoredProc_ResultSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/SAS2/QueryData", RequestNamespace="http://localhost/SAS2", ResponseNamespace="http://localhost/SAS2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryData(string sReturnColumns, string sVTable, string sDBNameParm, string sFilter, ref string sErrMsg) {
            object[] results = this.Invoke("QueryData", new object[] {
                        sReturnColumns,
                        sVTable,
                        sDBNameParm,
                        sFilter,
                        sErrMsg});
            sErrMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryDataAsync(string sReturnColumns, string sVTable, string sDBNameParm, string sFilter, string sErrMsg) {
            this.QueryDataAsync(sReturnColumns, sVTable, sDBNameParm, sFilter, sErrMsg, null);
        }
        
        /// <remarks/>
        public void QueryDataAsync(string sReturnColumns, string sVTable, string sDBNameParm, string sFilter, string sErrMsg, object userState) {
            if ((this.QueryDataOperationCompleted == null)) {
                this.QueryDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryDataOperationCompleted);
            }
            this.InvokeAsync("QueryData", new object[] {
                        sReturnColumns,
                        sVTable,
                        sDBNameParm,
                        sFilter,
                        sErrMsg}, this.QueryDataOperationCompleted, userState);
        }
        
        private void OnQueryDataOperationCompleted(object arg) {
            if ((this.QueryDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryDataCompleted(this, new QueryDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/SAS2/ExecuteQuery", RequestNamespace="http://localhost/SAS2", ResponseNamespace="http://localhost/SAS2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ExecuteQuery(string sDBNameParm, string sQuery, ref string sErrMsg) {
            object[] results = this.Invoke("ExecuteQuery", new object[] {
                        sDBNameParm,
                        sQuery,
                        sErrMsg});
            sErrMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteQueryAsync(string sDBNameParm, string sQuery, string sErrMsg) {
            this.ExecuteQueryAsync(sDBNameParm, sQuery, sErrMsg, null);
        }
        
        /// <remarks/>
        public void ExecuteQueryAsync(string sDBNameParm, string sQuery, string sErrMsg, object userState) {
            if ((this.ExecuteQueryOperationCompleted == null)) {
                this.ExecuteQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteQueryOperationCompleted);
            }
            this.InvokeAsync("ExecuteQuery", new object[] {
                        sDBNameParm,
                        sQuery,
                        sErrMsg}, this.ExecuteQueryOperationCompleted, userState);
        }
        
        private void OnExecuteQueryOperationCompleted(object arg) {
            if ((this.ExecuteQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteQueryCompleted(this, new ExecuteQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/SAS2/StoredProcForUpdate", RequestNamespace="http://localhost/SAS2", ResponseNamespace="http://localhost/SAS2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string StoredProcForUpdate(string StoredProcName, string DBNameParm, System.Data.DataSet dst) {
            object[] results = this.Invoke("StoredProcForUpdate", new object[] {
                        StoredProcName,
                        DBNameParm,
                        dst});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void StoredProcForUpdateAsync(string StoredProcName, string DBNameParm, System.Data.DataSet dst) {
            this.StoredProcForUpdateAsync(StoredProcName, DBNameParm, dst, null);
        }
        
        /// <remarks/>
        public void StoredProcForUpdateAsync(string StoredProcName, string DBNameParm, System.Data.DataSet dst, object userState) {
            if ((this.StoredProcForUpdateOperationCompleted == null)) {
                this.StoredProcForUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStoredProcForUpdateOperationCompleted);
            }
            this.InvokeAsync("StoredProcForUpdate", new object[] {
                        StoredProcName,
                        DBNameParm,
                        dst}, this.StoredProcForUpdateOperationCompleted, userState);
        }
        
        private void OnStoredProcForUpdateOperationCompleted(object arg) {
            if ((this.StoredProcForUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StoredProcForUpdateCompleted(this, new StoredProcForUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/SAS2/StoredProcForUpdate2", RequestNamespace="http://localhost/SAS2", ResponseNamespace="http://localhost/SAS2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string StoredProcForUpdate2(string sDBNameParm, string spName, string columnNames, string columnValues) {
            object[] results = this.Invoke("StoredProcForUpdate2", new object[] {
                        sDBNameParm,
                        spName,
                        columnNames,
                        columnValues});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void StoredProcForUpdate2Async(string sDBNameParm, string spName, string columnNames, string columnValues) {
            this.StoredProcForUpdate2Async(sDBNameParm, spName, columnNames, columnValues, null);
        }
        
        /// <remarks/>
        public void StoredProcForUpdate2Async(string sDBNameParm, string spName, string columnNames, string columnValues, object userState) {
            if ((this.StoredProcForUpdate2OperationCompleted == null)) {
                this.StoredProcForUpdate2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnStoredProcForUpdate2OperationCompleted);
            }
            this.InvokeAsync("StoredProcForUpdate2", new object[] {
                        sDBNameParm,
                        spName,
                        columnNames,
                        columnValues}, this.StoredProcForUpdate2OperationCompleted, userState);
        }
        
        private void OnStoredProcForUpdate2OperationCompleted(object arg) {
            if ((this.StoredProcForUpdate2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StoredProcForUpdate2Completed(this, new StoredProcForUpdate2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/SAS2/TranslatePageStrings", RequestNamespace="http://localhost/SAS2", ResponseNamespace="http://localhost/SAS2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TranslatePageStrings(string sDBName, bool useAltLang, ref System.Data.DataTable dt) {
            object[] results = this.Invoke("TranslatePageStrings", new object[] {
                        sDBName,
                        useAltLang,
                        dt});
            dt = ((System.Data.DataTable)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TranslatePageStringsAsync(string sDBName, bool useAltLang, System.Data.DataTable dt) {
            this.TranslatePageStringsAsync(sDBName, useAltLang, dt, null);
        }
        
        /// <remarks/>
        public void TranslatePageStringsAsync(string sDBName, bool useAltLang, System.Data.DataTable dt, object userState) {
            if ((this.TranslatePageStringsOperationCompleted == null)) {
                this.TranslatePageStringsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTranslatePageStringsOperationCompleted);
            }
            this.InvokeAsync("TranslatePageStrings", new object[] {
                        sDBName,
                        useAltLang,
                        dt}, this.TranslatePageStringsOperationCompleted, userState);
        }
        
        private void OnTranslatePageStringsOperationCompleted(object arg) {
            if ((this.TranslatePageStringsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TranslatePageStringsCompleted(this, new TranslatePageStringsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InitializeWebPageCompletedEventHandler(object sender, InitializeWebPageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitializeWebPageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitializeWebPageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void QueryData_UUQPCompletedEventHandler(object sender, QueryData_UUQPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryData_UUQPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryData_UUQPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string sErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void QueryStoredProc_ResultSet_UUQPCompletedEventHandler(object sender, QueryStoredProc_ResultSet_UUQPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryStoredProc_ResultSet_UUQPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryStoredProc_ResultSet_UUQPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string sErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateDataCompletedEventHandler(object sender, UpdateDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void QueryStoredProc_ResultSetCompletedEventHandler(object sender, QueryStoredProc_ResultSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryStoredProc_ResultSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryStoredProc_ResultSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string sErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void QueryDataCompletedEventHandler(object sender, QueryDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string sErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ExecuteQueryCompletedEventHandler(object sender, ExecuteQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string sErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void StoredProcForUpdateCompletedEventHandler(object sender, StoredProcForUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StoredProcForUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StoredProcForUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void StoredProcForUpdate2CompletedEventHandler(object sender, StoredProcForUpdate2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StoredProcForUpdate2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StoredProcForUpdate2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void TranslatePageStringsCompletedEventHandler(object sender, TranslatePageStringsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TranslatePageStringsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TranslatePageStringsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dt {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591